package assign_MDIT1;

	// Generated by Selenium IDE
//	import org.junit.Test;
//	import org.junit.Before;
//	import org.junit.After;
	//import static org.junit.Assert.*;
import static org.testng.Assert.assertEquals;
//import static org.hamcrest.CoreMatchers.is;
	//import static org.hamcrest.core.IsNot.not;
	import org.openqa.selenium.By;
	import org.openqa.selenium.WebDriver;
	import org.openqa.selenium.firefox.FirefoxDriver;
	import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.edge.EdgeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
	import org.openqa.selenium.remote.DesiredCapabilities;
	import org.openqa.selenium.Dimension;
	import org.openqa.selenium.WebElement;
	import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.logging.LogEntries;
import org.openqa.selenium.logging.LogEntry;
import org.openqa.selenium.support.ui.ExpectedConditions;
	import org.openqa.selenium.support.ui.WebDriverWait;
import org.testng.annotations.AfterTest;
import org.testng.annotations.BeforeTest;
import org.testng.annotations.Test;

import io.github.bonigarcia.wdm.WebDriverManager;
import jxl.common.Assert;

import org.openqa.selenium.JavascriptExecutor;
	import org.openqa.selenium.Alert;
	import org.openqa.selenium.Keys;
	import java.util.*;
import java.util.regex.Pattern;
import java.net.MalformedURLException;
	import java.net.URL;
	public class Script5 {
	  private WebDriver driver;
	  private Map<String, Object> vars;
	  JavascriptExecutor js;
	  @BeforeTest
	  public void setUp() {
		  WebDriverManager.edgedriver().setup();
	    driver = new EdgeDriver();
	    js = (JavascriptExecutor) driver;
	    vars = new HashMap<String, Object>();
	  }
	  @AfterTest
	  public void tearDown() {
	    driver.quit();
	  }
	  @org.testng.annotations.Test
	  public void test1() {
	  //try { 
		  driver.get("https://www.google.com/search?q=automation+testing+selenium&sca_esv=593778038&source=hp&ei=UOuKZc_9GPup0-kP-LqMgAU&iflsig=AO6bgOgAAAAAZYr5YEZTgUk674tfkWgkESjBfPItCZ6x&ved=0ahUKEwjP5e7or62DAxX71DQHHXgdA1AQ4dUDCAo&uact=5&oq=automation+testing+selenium&gs_lp=Egdnd3Mtd2l6IhthdXRvbWF0aW9uIHRlc3Rpbmcgc2VsZW5pdW0yBRAAGIAEMgUQABiABDIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgAQyBRAAGIAEMgUQABiABDIFEAAYgAQyBRAAGIAESLJ7UABY7nRwAHgAkAEAmAGWCaAB4jaqAQ4yLjIwLjQtMS4xLjIuMbgBA8gBAPgBAcICERAuGIAEGLEDGIMBGMcBGNEDwgIOEAAYgAQYigUYsQMYgwHCAg4QLhiABBiKBRixAxiDAcICCxAuGIAEGLEDGIMBwgIEEAAYA8ICCxAAGIAEGLEDGIMBwgIIEAAYgAQYsQPCAggQLhiABBixA8ICDhAuGIAEGLEDGMcBGNEDwgIFEC4YgATCAgsQABiABBiKBRixAw&sclient=gws-wiz");
	    driver.manage().window().maximize();
//	    vars.put("c", driver.findElement(By.xpath("//a[@href=\"https://www.javatpoint.com/selenium-tutorial\"]/h3")).getText());
//	    assertEquals(vars.get("c").toString(), "Selenium Tutorial");
	    
	   List<WebElement> lu=driver.findElements(By.xpath("//h3[@class='LC20lb MBeuO DKV0Md']"));
	    //List<WebElement> lu=driver.findElements(By.xpath("//div[@class='g Ww4FFb vt6azd tF2Cxc asEBEc'"));
	    int ly=lu.size();
	    System.out.println(ly);
	    //System.out.println(lu.size().);
//	    for(WebElement et : lu) {
//	    	String r=et.getText();
//	    	System.out.println(r);
//	    }
//	    String h=lu.get(5).getText();
//	    System.out.println(h);
	    String h=lu.get(3).getText();
	    System.out.println(h);
//	    if (h.equals("Selenium Tutorial")) {
//            System.out.println("Assertion passed: The link is displaying on the webpage");
//        } else {
//            System.out.println("Assertion failed: The link is NOT displaying on the webpage");
//    	   
//            // Perform additional actions or print statements after assertion failure
//        }
	    
	   
	    
	    for (int i = 0; i < ly; i++) {
            WebElement et = lu.get(i);
            String r = et.getText();
            if(r.equals("Selenium Tutorial")) {
	    		System.out.println("the position of the selenium tutorial' is:"+(i+1));
	    		break;
	    	}
	    }
	    
	    
	    
	  }
	}


